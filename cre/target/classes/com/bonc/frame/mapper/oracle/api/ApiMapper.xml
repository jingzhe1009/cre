<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bonc.frame.dao.api.ApiMapper">

    <resultMap id="BaseResultMap" type="com.bonc.frame.entity.api.ApiConf">
        <id column="API_ID" property="apiId" jdbcType="VARCHAR"/>
        <result column="FOLDER_ID" property="folderId" jdbcType="VARCHAR"/>
        <result column="API_TYPE" property="apiType" jdbcType="VARCHAR"/>
        <result column="API_NAME" property="apiName" jdbcType="VARCHAR"/>
        <result column="API_DESC" property="apiDesc" jdbcType="VARCHAR"/>
        <result column="IS_LOG" property="isLog" jdbcType="VARCHAR"/>
        <result column="CREATE_PERSION" property="createPersion" jdbcType="VARCHAR"/>
        <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_PERSION" property="updatePersion" jdbcType="VARCHAR"/>
        <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="IS_PUBLIC" jdbcType="VARCHAR" property="isPublic"/>
        <result column="API_GROUP_ID" jdbcType="VARCHAR" property="apiGroupId"/>
    </resultMap>

    <resultMap id="ResultMapWithBLOBs" type="com.bonc.frame.entity.api.ApiConf" extends="BaseResultMap">
        <result column="API_CONTENT" property="apiContent" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <resultMap id="ResultMapWithGroupName" type="com.bonc.frame.entity.api.ApiConfGroup" extends="ResultMapWithBLOBs">
        <result column="API_GROUP_NAME" property="apiGroupName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        API_ID,FOLDER_ID, API_TYPE, API_NAME, API_DESC, IS_LOG, CREATE_PERSION, CREATE_DATE, UPDATE_PERSION,
        UPDATE_DATE, IS_PUBLIC, API_GROUP_ID
  </sql>

    <sql id="Blob_Column_List">
    API_CONTENT
  </sql>

    <sql id="Base_Column_Lista">
        a.API_ID, a.FOLDER_ID, a.API_TYPE, a.API_NAME, a.API_DESC,
        a.IS_LOG, a.CREATE_PERSION, a.CREATE_DATE, a.UPDATE_PERSION,
        a.UPDATE_DATE, a.IS_PUBLIC, a.API_GROUP_ID, a.API_CONTENT
    </sql>

    <select id="countApiUsedByApiId" parameterType="java.lang.String" resultType="int">
        SELECT
            COUNT (*)
        FROM
            (
                SELECT
                    API_ID
                FROM
                    CRE_API_RULE
                WHERE
                    API_ID IS NOT NULL
                AND API_ID = #{apiId,jdbcType = VARCHAR }
            UNION
                SELECT
                    API_ID
                FROM
                    CRE_KPI_DEFINITION
                WHERE
                    API_ID IS NOT NULL
                AND API_ID = #{apiId,jdbcType = VARCHAR }
            )
    </select>

    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from CRE_API_CONF
        WHERE 1=1
        <if test="apiId != null">
            and API_ID = #{apiId,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="selectApiByProperty" resultMap="ResultMapWithBLOBs" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from CRE_API_CONF
        WHERE 1=1
        <if test="apiId != null">
            and API_ID = #{apiId,jdbcType=VARCHAR}
        </if>
        <if test="apiName != null">
            and API_NAME = #{apiName,jdbcType=VARCHAR}
        </if>
        <if test="url != null and '' != url">
            <bind name="pattern" value="'%' + _parameter.url + '%'"/>
            and API_CONTENT like #{pattern}
        </if>
        <if test="isPublic != null">
            and IS_PUBLIC = #{isPublic,jdbcType=VARCHAR}
        </if>
        <if test="folderId != null">
            and FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="selectApiByApiIdList" resultMap="ResultMapWithBLOBs" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from CRE_API_CONF
        WHERE 1=1
        AND API_ID IN
        <foreach collection="apiIdList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 获取所有的api接口类型 -->
    <select id="selectApiTypes" resultType="map">
        SELECT API_TYPE AS "key",API_TYPE_NAME AS "text"  FROM CRE_API_TYPE
    </select>

    <!-- 分页查询api列表 -->
    <select id="getApiList" resultMap="ResultMapWithBLOBs" parameterType="map">
        select * from CRE_API_CONF
        where 1=1
        <if test="folderId != null">
            and FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        </if>
        <if test="apiName != null">
            and API_NAME like #{apiName,jdbcType=VARCHAR}
        </if>
        order by CREATE_DATE desc
    </select>

    <!-- 查询相同文件夹中接口名是否重复 -->
    <select id="getApiListByName" parameterType="map" resultType="int">
        select count(*) as "count" from CRE_API_CONF
        where API_NAME = #{apiName,jdbcType=VARCHAR}
        <if test="folderId != null">
            and FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        </if>
        <if test="apiId != null">
            and API_ID != #{apiId,jdbcType=VARCHAR}
        </if>
        <if test="apiGroupId != null">
            and API_GROUP_ID != #{apiGroupId,jdbcType=VARCHAR}
        </if>
    </select>

    <!-- 获取模型引用的所有的接口 -->
    <select id="selecApiPropertiesByRuleId" resultMap="ResultMapWithBLOBs" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        CRE_API_CONF
        WHERE
        1 = 1
        AND API_ID IN (

        SELECT
        D .API_ID AS API_ID
        FROM
        CRE_API_RULE D
        WHERE
        <if test="ruleId != null">
            E .RULE_ID = #{ruleId,jdbcType=VARCHAR}
        </if>
        AND D .API_ID IS NOT NULL
        UNION
        SELECT
        A .API_ID AS API_ID
        FROM
        CRE_KPI_DEFINITION A
        INNER JOIN CRE_KPI_RULE b ON A .KPI_ID = b.KPI_ID
        WHERE
        <if test="ruleId != null">
            b.RULE_ID = #{ruleId,jdbcType=VARCHAR}
        </if>
        AND A .API_ID IS NOT NULL
        )
    </select>


    <select id="getAllApiByFolderId" resultMap="BaseResultMap" parameterType="string">
        select * from CRE_API_CONF
        where FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        order by CREATE_DATE DESC
    </select>

    <!-- 是否存在私有接口 -->
    <select id="checkExitsPrivateApi" resultType="int" parameterType="java.util.Map">
        SELECT count(1) FROM CRE_API_CONF
        WHERE IS_PUBLIC = '0'
        <if test="folderId != null">
            AND FOLDER_ID = #{folderId, jdbcType=VARCHAR}
        </if>
        AND API_ID IN
        <foreach collection="apiIdList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getVariablesByApiId" resultType="com.bonc.frame.entity.commonresource.VariableGroupExt"
            parameterType="java.lang.String">
        SELECT
            T .VARIABLE_ID AS "variableId",
            T .VARIABLE_ALIAS AS "variableAlias",
            T .VARIABLE_CODE AS "variableCode",
            T .TYPE_ID AS "typeId",
            T .KIND_ID AS "kindId",
            T .IS_PUBLIC AS "isPublic",
            T .VARIABLE_GROUP_ID AS "variableGroupId",
            VK.KIND_VALUE AS "kindValue",
            VT.TYPE_VALUE AS "typeValue",
            VG.VARIABLE_GROUP_NAME AS "variableGroupName"
        FROM
            (
                SELECT
                    VARIABLE_ID,
                    VARIABLE_ALIAS,
        VARIABLE_CODE,
                    TYPE_ID,
                    KIND_ID,
                    IS_PUBLIC,
                    VARIABLE_GROUP_ID
                FROM
                    CRE_VARIABLE
                WHERE
                    VARIABLE_ID IN (
                        SELECT
                            VARIABLE_ID
                        FROM
                            CRE_VARIABLE_API
                        WHERE
                            API_ID = #{apiId,jdbcType=VARCHAR}
                            AND API_VARIABLE_TYPE = '1'
                    )
            ) T
        LEFT JOIN CRE_VARIABLE_KIND VK ON T .KIND_ID = VK.KIND_ID
        LEFT JOIN CRE_VARIABLE_TYPE VT ON T .TYPE_ID = VT.TYPE_ID
        LEFT JOIN CRE_PUB_VARIABLE_GROUP VG ON T .VARIABLE_GROUP_ID = VG.VARIABLE_GROUP_ID
    </select>

    <insert id="insertSelective" parameterType="com.bonc.frame.entity.api.ApiConf">
        insert into CRE_API_CONF
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="apiId != null">
                API_ID,
            </if>
            <if test="folderId != null">
                FOLDER_ID,
            </if>
            <if test="apiGroupId != null">
                API_GROUP_ID,
            </if>
            <if test="isPublic != null">
                IS_PUBLIC,
            </if>
            <if test="apiType != null">
                API_TYPE,
            </if>
            <if test="apiName != null">
                API_NAME,
            </if>
            <if test="apiDesc != null">
                API_DESC,
            </if>
            <if test="isLog != null">
                IS_LOG,
            </if>
            <if test="createPersion != null">
                CREATE_PERSION,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updatePersion != null">
                UPDATE_PERSION,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
            <if test="apiContent != null">
                API_CONTENT,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="apiId != null">
                #{apiId,jdbcType=VARCHAR},
            </if>
            <if test="folderId != null">
                #{folderId,jdbcType=VARCHAR},
            </if>
            <if test="apiGroupId != null">
                #{apiGroupId,jdbcType=VARCHAR},
            </if>
            <if test="isPublic != null">
                #{isPublic,jdbcType=VARCHAR},
            </if>
            <if test="apiType != null">
                #{apiType,jdbcType=VARCHAR},
            </if>
            <if test="apiName != null">
                #{apiName,jdbcType=VARCHAR},
            </if>
            <if test="apiDesc != null">
                #{apiDesc,jdbcType=VARCHAR},
            </if>
            <if test="isLog != null">
                #{isLog,jdbcType=VARCHAR},
            </if>
            <if test="createPersion != null">
                #{createPersion,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePersion != null">
                #{updatePersion,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="apiContent != null">
                #{apiContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.bonc.frame.entity.api.ApiConf">
        update CRE_API_CONF
        <set>
            <if test="folderId != null">
                FOLDER_ID = #{folderId,jdbcType=VARCHAR},
            </if>
            <if test="apiType != null">
                API_TYPE = #{apiType,jdbcType=VARCHAR},
            </if>
            <if test="apiName != null">
                API_NAME = #{apiName,jdbcType=VARCHAR},
            </if>
            <if test="apiDesc != null">
                API_DESC = #{apiDesc,jdbcType=VARCHAR},
            </if>
            <if test="isLog != null">
                IS_LOG = #{isLog,jdbcType=VARCHAR},
            </if>
            <if test="createPersion != null">
                CREATE_PERSION = #{createPersion,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePersion != null">
                UPDATE_PERSION = #{updatePersion,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="apiContent != null">
                API_CONTENT = #{apiContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="apiGroupId != null">
                API_GROUP_ID = #{apiGroupId,jdbcType=VARCHAR},
            </if>
        </set>
        where API_ID = #{apiId,jdbcType=VARCHAR}
    </update>

    <!-- 根据文件夹ID删除所有API -->
    <delete id="deleteApiByFolderId" parameterType="string">
        delete from CRE_API_CONF where FOLDER_ID = #{folderId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from CRE_API_CONF
        where API_ID = #{apiId,jdbcType=VARCHAR}
    </delete>

    <!--                   公共接口                   -->

    <!--查询所有api列表 -->
    <select id="pubGetAllApiList" resultMap="ResultMapWithGroupName" parameterType="map">
        select
        <include refid="Base_Column_Lista"></include>,
        b.API_GROUP_NAME
        from CRE_API_CONF a
        LEFT JOIN CRE_PUB_API_GROUP b
        ON a.API_GROUP_ID = b.API_GROUP_ID
        where a.IS_PUBLIC = '1'
        order by a.CREATE_DATE desc
    </select>


    <!-- 分页查询api列表 接口名、接口类型名称、创建时间 -->
    <select id="pubGetApiList" resultMap="ResultMapWithGroupName" parameterType="map">
        select
        <include refid="Base_Column_Lista"></include>,
        b.API_GROUP_NAME
        from CRE_API_CONF a
        LEFT JOIN CRE_PUB_API_GROUP b
        ON a.API_GROUP_ID = b.API_GROUP_ID
        where a.IS_PUBLIC = '1'
        <if test="apiName != null and '' != apiName">
            <bind name="pattern" value="'%' + _parameter.apiName + '%'"/>
            and a.API_NAME like #{pattern}
        </if>
        <if test="apiGroupName != null and '' != apiGroupName">
            <bind name="pattern1" value="'%' + _parameter.apiGroupName + '%'"/>
            and b.API_GROUP_NAME like #{pattern1}
        </if>
        <if test="startDate != null and '' != startDate">
            and a.CREATE_DATE &gt;= to_date(#{startDate,jdbcType=TIMESTAMP} ,'yyyy-mm-dd hh24:mi:ss')
        </if>
        <if test="endDate != null and '' != endDate">
            and a.CREATE_DATE &lt;= to_date(#{endDate,jdbcType=TIMESTAMP} ,'yyyy-mm-dd hh24:mi:ss')
        </if>
        order by a.CREATE_DATE desc
    </select>

    <!-- 分页查询api列表 接口名、接口类型名称、创建时间 -->
    <select id="pagedPubApiResource" resultType="com.bonc.frame.entity.auth.resource.PubApiResource"
            parameterType="map">
        select
        a.API_ID AS "apiId",
        a.API_TYPE AS "apiType",
        a.API_NAME AS "apiName",
        a.API_DESC AS "apiDesc",
        a.CREATE_DATE AS "createDate",
        a.API_GROUP_ID AS "apiGroupId",
        b.API_GROUP_NAME as "apiGroupName"
        from CRE_API_CONF a
        LEFT JOIN CRE_PUB_API_GROUP b
        ON a.API_GROUP_ID = b.API_GROUP_ID
        where a.IS_PUBLIC = '1'
        <if test="apiName != null and '' != apiName">
            <bind name="pattern" value="'%' + _parameter.apiName + '%'"/>
            and a.API_NAME like #{pattern}
        </if>
        <if test="apiGroupName != null and '' != apiGroupName">
            <bind name="pattern1" value="'%' + _parameter.apiGroupName + '%'"/>
            and b.API_GROUP_NAME like #{pattern1}
        </if>
        <if test="startDate != null and '' != startDate">
            and a.CREATE_DATE &gt;= to_date(#{startDate,jdbcType=TIMESTAMP} ,'yyyy-mm-dd hh24:mi:ss')
        </if>
        <if test="endDate != null and '' != endDate">
            and a.CREATE_DATE &lt;= to_date(#{endDate,jdbcType=TIMESTAMP} ,'yyyy-mm-dd hh24:mi:ss')
        </if>
        order by a.CREATE_DATE desc
    </select>

    <!-- 获取指定接口组id的所有变量 -->
    <select id="pubSelectApisByGroupId" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>,
        <include refid="Blob_Column_List"/>
        from CRE_API_CONF
        where API_GROUP_ID = #{apiGroupId,jdbcType=VARCHAR}
    </select>

    <!-- 获取指定接口组id引用的私有变量个数 -->
    <select id="countPrivateVariables" parameterType="java.lang.String" resultType="int">
        SELECT count(1) FROM CRE_VARIABLE
        WHERE IS_PUBLIC != '1' AND VARIABLE_ID IN (
            SELECT VARIABLE_ID FROM CRE_VARIABLE_API
            WHERE API_ID = #{apiGroupId,jdbcType=VARCHAR}
        )
    </select>

    <!-- 将私有接口变为公有接口 -->
    <update id="upgrade" parameterType="java.util.Map">
        UPDATE CRE_API_CONF
        <set>
            IS_PUBLIC = '1',
            FOLDER_ID = NULL,
            UPDATE_PERSION = #{updatePersion,jdbcType=VARCHAR},
            UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            API_GROUP_ID = #{apiGroupId,jdbcType=VARCHAR}
        </set>
        WHERE API_ID = #{apiId,jdbcType=VARCHAR}
    </update>

    <insert id="pubInsertSelective" parameterType="com.bonc.frame.entity.api.ApiConf">
        insert into CRE_API_CONF
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="apiId != null">
                API_ID,
            </if>
            <if test="apiType != null">
                API_TYPE,
            </if>
            <if test="apiName != null">
                API_NAME,
            </if>
            <if test="apiDesc != null">
                API_DESC,
            </if>
            <if test="isLog != null">
                IS_LOG,
            </if>
            <if test="createPersion != null">
                CREATE_PERSION,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updatePersion != null">
                UPDATE_PERSION,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
            <if test="apiContent != null">
                API_CONTENT,
            </if>
            <if test="isPublic != null">
                IS_PUBLIC,
            </if>
            <if test="apiGroupId != null">
                API_GROUP_ID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="apiId != null">
                #{apiId,jdbcType=VARCHAR},
            </if>
            <if test="apiType != null">
                #{apiType,jdbcType=VARCHAR},
            </if>
            <if test="apiName != null">
                #{apiName,jdbcType=VARCHAR},
            </if>
            <if test="apiDesc != null">
                #{apiDesc,jdbcType=VARCHAR},
            </if>
            <if test="isLog != null">
                #{isLog,jdbcType=VARCHAR},
            </if>
            <if test="createPersion != null">
                #{createPersion,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePersion != null">
                #{updatePersion,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="apiContent != null">
                #{apiContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="isPublic != null">
                #{isPublic,jdbcType=VARCHAR},
            </if>
            <if test="apiGroupId != null">
                #{apiGroupId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

</mapper>