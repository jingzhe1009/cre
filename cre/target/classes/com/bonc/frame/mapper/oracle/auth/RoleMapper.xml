<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bonc.frame.mapper.auth.RoleMapper">

    <resultMap id="BaseResultMap" type="com.bonc.frame.entity.auth.Role">
        <id column="ROLE_ID" property="roleId" jdbcType="VARCHAR"/>
        <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR"/>
        <result column="ROLE_DESC" property="roleDesc" jdbcType="VARCHAR"/>
        <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="CREATE_PERSON" property="createPerson" jdbcType="VARCHAR"/>
        <result column="UPDATE_PERSON" property="updatePerson" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
      ROLE_ID,ROLE_NAME, ROLE_DESC, CREATE_DATE, UPDATE_DATE, CREATE_PERSON,UPDATE_PERSON
    </sql>
    <insert id="insert" parameterType="com.bonc.frame.entity.auth.Role">
        insert into CRE_AUTH_ROLE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                ROLE_ID,
            </if>
            <if test="roleName != null">
                ROLE_NAME,
            </if>
            <if test="roleDesc != null">
                ROLE_DESC,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
            <if test="createPerson != null">
                CREATE_PERSON,
            </if>
            <if test="updatePerson != null">
                UPDATE_PERSON,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createPerson != null">
                #{createPerson,jdbcType=VARCHAR},
            </if>
            <if test="updatePerson != null">
                #{updatePerson,jdbcType=VARCHAR},
            </if>
        </trim>

    </insert>

    <select id="listByRoleName" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from CRE_AUTH_ROLE
        where 1=1
        <if test="roleName != null and '' != roleName">
            <bind name="roleNamePattern" value="'%' + _parameter.roleName + '%'" />
            and ROLE_NAME like #{roleNamePattern}
        </if>
    </select>

    <select id="getRoleByUser" resultType="com.bonc.frame.entity.auth.Role" parameterType="map">
        select
        a.ROLE_ID as roleId ,
        a.ROLE_NAME as roleName ,
        a.ROLE_DESC as roleDesc ,
        a.CREATE_DATE as createDate ,
        a.UPDATE_DATE as updateDate ,
        a.CREATE_PERSON as createPerson ,
        a.UPDATE_PERSON as updatePerson
        from CRE_AUTH_ROLE a INNER JOIN CRE_AUTH_USER_ROLE b ON a.ROLE_ID = b.ROLE_ID
        where 1=1 AND b.USER_ID = #{user}
    </select>

    <select id="getRoleByUser2" resultType="com.bonc.frame.entity.auth.Role" parameterType="map">
        select
        a.ROLE_ID as roleId ,
        a.ROLE_NAME as roleName ,
        a.ROLE_DESC as roleDesc ,
        a.CREATE_DATE as createDate ,
        a.UPDATE_DATE as updateDate ,
        a.CREATE_PERSON as createPerson ,
        a.UPDATE_PERSON as updatePerson
        from CRE_AUTH_ROLE a INNER JOIN CRE_AUTH_USER_ROLE b ON a.ROLE_ID = b.ROLE_ID
        where 1=1 AND b.USER_ID = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="findByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from CRE_AUTH_ROLE
        where ROLE_NAME = #{roleName,jdbcType=VARCHAR}
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from CRE_AUTH_ROLE
        where ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from CRE_AUTH_ROLE
        where ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteRole" parameterType="java.lang.String">
        delete from CRE_AUTH_USER_ROLE
        where ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="com.bonc.frame.entity.auth.Role">
        update CRE_AUTH_ROLE
        <set>
            <if test="roleId != null">
                ROLE_ID=#{roleId,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                ROLE_NAME=#{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                ROLE_DESC=#{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                CREATE_DATE=#{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE=#{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createPerson != null">
                CREATE_PERSON=#{createPerson,jdbcType=VARCHAR},
            </if>
            <if test="updatePerson != null">
                UPDATE_PERSON=#{updatePerson,jdbcType=VARCHAR},
            </if>
        </set>
        where ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </update>

    <select id="getRoleIdByUserId" parameterType="java.lang.String" resultType="java.lang.String">
        select ROLE_ID from CRE_AUTH_USER_ROLE
        where USER_ID = #{userId,jdbcType=VARCHAR}
    </select>

</mapper>