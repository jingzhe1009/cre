<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bonc.frame.dao.task.RuleTaskMapper">
    <resultMap id="BaseResultMap" type="com.bonc.frame.entity.task.RuleTask">
        <id column="TASK_ID" property="taskId" jdbcType="VARCHAR"/>
        <result column="TASK_NAME" property="taskName" jdbcType="VARCHAR"/>
        <result column="PACKAGE_ID" property="packageId" jdbcType="VARCHAR"/>
        <result column="PACKAGE_NAME" property="packageName" jdbcType="VARCHAR"/>
        <result column="RULE_ID" property="ruleId" jdbcType="VARCHAR"/>
        <result column="RULE_NAME" property="ruleName" jdbcType="VARCHAR"/>
        <result column="RULE_VERSION" property="ruleVersion" jdbcType="VARCHAR"/>
        <result column="TASK_STATUS" property="taskStatus" jdbcType="VARCHAR"/>
        <result column="CRON" property="cron" jdbcType="VARCHAR"/>
        <result column="EXECUTE_COUNT" property="executeCount" jdbcType="BIGINT"/>
        <result column="INPUT_SQL" property="inputSql" jdbcType="VARCHAR"/>
        <result column="OUTPUT_SQL" property="outputSql" jdbcType="VARCHAR"/>
        <result column="DESCRIBE" property="describe" jdbcType="VARCHAR"/>
        <result column="RESULT_DESCRIBE" property="resultDescribe" jdbcType="VARCHAR"/>
        <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="CREATE_PERSON" property="createPerson" jdbcType="VARCHAR"/>
        <result column="UPDATE_PERSON" property="updatePerson" jdbcType="VARCHAR"/>
        <result column="EXIST_TABLE_SQL" property="existTableSql" jdbcType="VARCHAR"/>
        <result column="CREATE_TABLE_SQL" property="createTableSql" jdbcType="VARCHAR"/>
        <result column="INPUT_DB_ID" property="inputDbId" jdbcType="VARCHAR"/>
        <result column="OUTPUT_DB_ID" property="outputDbId" jdbcType="VARCHAR"/>
        <result column="INPUT_TABLE_ID" property="inputTableId" jdbcType="VARCHAR"/>
        <result column="INPUT_TABLE_CODE" property="inputTableCode" jdbcType="VARCHAR"/>
        <result column="INPUT_TABLE_KIND" property="inputTableKind" jdbcType="VARCHAR"/>
        <result column="OUTPUT_TABLE_ID" property="outputTableId" jdbcType="VARCHAR"/>
        <result column="OUTPUT_TABLE_CODE" property="outputTableCode" jdbcType="VARCHAR"/>
        <result column="NUM" property="num" jdbcType="BIGINT"/>
        <result column="SCAN_OFFSET" property="scanOffset" jdbcType="BIGINT"/>
        <result column="SCAN_MAX_SIZE" property="scanMaxSize" jdbcType="BIGINT"/>
        <result column="SCAN_NEXT_OFFSET" property="scanNextOffset" jdbcType="BIGINT"/>
        <result column="INPUT_TABLE_ORDER_FIELD" property="inputTableOrderField" jdbcType="VARCHAR"/>
        <result column="INPUT_TABLE_WHERE_CLAUSE" property="inputTableWhereClause" jdbcType="VARCHAR"/>
        <result column="SCAN_NEXT_ROW_KEY" property="scanNextRowKey" jdbcType="VARCHAR"/>
        <result column="INPUT_DB_TYPE" property="inputDbType" jdbcType="VARCHAR"/>
        <result column="OUTPUT_DB_TYPE" property="outputDbType" jdbcType="VARCHAR"/>
        <result column="IS_ALLOWED_REPEAT" property="isAllowedRepeat" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        TASK_ID, TASK_NAME, PACKAGE_ID, PACKAGE_NAME, RULE_ID, RULE_NAME, RULE_VERSION, TASK_STATUS,
        CRON, EXECUTE_COUNT, INPUT_SQL, OUTPUT_SQL, DESCRIBE, RESULT_DESCRIBE,
        CREATE_DATE, UPDATE_DATE, CREATE_PERSON, UPDATE_PERSON, INPUT_DB_ID, INPUT_TABLE_KIND,
        OUTPUT_DB_ID, INPUT_TABLE_ID, INPUT_TABLE_CODE, OUTPUT_TABLE_ID, OUTPUT_TABLE_CODE,
        EXIST_TABLE_SQL, CREATE_TABLE_SQL, NUM, SCAN_OFFSET, SCAN_MAX_SIZE, SCAN_NEXT_OFFSET,
        INPUT_TABLE_ORDER_FIELD, INPUT_TABLE_WHERE_CLAUSE, SCAN_NEXT_ROW_KEY,
        INPUT_DB_TYPE, OUTPUT_DB_TYPE,IS_ALLOWED_REPEAT
    </sql>

    <!-- 检验 name 唯一性 -->
    <select id="countByName" parameterType="java.util.Map" resultType="int">
        select count(*) as "count" from CRE_RULE_TASK
        where TASK_NAME = #{taskName,jdbcType=VARCHAR}
        <if test="taskId != null">
            and TASK_ID != #{taskId,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultType="com.bonc.frame.entity.task.RuleTask" parameterType="java.lang.String">
        select
        TASK_ID AS "taskId",
        TASK_NAME AS "taskName",
        PACKAGE_ID AS "packageId",
        PACKAGE_NAME AS "packageName",
        RULE_ID AS "ruleId",
        RULE_NAME AS "ruleName",
        RULE_VERSION AS "ruleVersion",
        TASK_STATUS AS "taskStatus",
        IS_ALLOWED_REPEAT AS "isAllowedRepeat",
        CRON AS "cron",
        EXECUTE_COUNT AS "executeCount",
        INPUT_SQL AS "inputSql",
        OUTPUT_SQL AS "outputSql",
        DESCRIBE AS "describe",
        RESULT_DESCRIBE AS "resultDescribe",
        INPUT_DB_ID AS "inputDbId",
        OUTPUT_DB_ID AS "outputDbId",
        INPUT_DB_TYPE AS "inputDbType",
        OUTPUT_DB_TYPE AS "outputDbType",
        INPUT_TABLE_ID AS "inputTableId",
        INPUT_TABLE_CODE AS "inputTableCode",
        INPUT_TABLE_KIND AS "inputTableKind",
        OUTPUT_TABLE_ID AS "outputTableId",
        OUTPUT_TABLE_CODE AS "outputTableCode",
        EXIST_TABLE_SQL AS "existTableSql",
        CREATE_TABLE_SQL AS "createTableSql",
        INPUT_TABLE_ORDER_FIELD AS "inputTableOrderField",
        INPUT_TABLE_WHERE_CLAUSE AS "inputTableWhereClause",
        SCAN_NEXT_ROW_KEY AS "scanNextRowKey",
        NUM AS "num",
        SCAN_OFFSET AS "scanOffset",
        SCAN_MAX_SIZE AS "scanMaxSize",
        SCAN_NEXT_OFFSET AS "scanNextOffset"
        from CRE_RULE_TASK
        where TASK_ID = #{taskId,jdbcType=VARCHAR}
    </select>

    <select id="selectByPrimaryKeys" resultType="com.bonc.frame.entity.task.RuleTask" parameterType="java.lang.String">
        select
        TASK_ID AS "taskId",
        TASK_NAME AS "taskName",
        PACKAGE_ID AS "packageId",
        PACKAGE_NAME AS "packageName",
        RULE_ID AS "ruleId",
        RULE_NAME AS "ruleName",
        RULE_VERSION AS "ruleVersion",
        TASK_STATUS AS "taskStatus",
        IS_ALLOWED_REPEAT AS "isAllowedRepeat",
        CRON AS "cron",
        EXECUTE_COUNT AS "executeCount",
        INPUT_SQL AS "inputSql",
        OUTPUT_SQL AS "outputSql",
        DESCRIBE AS "describe",
        RESULT_DESCRIBE AS "resultDescribe",
        INPUT_DB_ID AS "inputDbId",
        OUTPUT_DB_ID AS "outputDbId",
        INPUT_DB_TYPE AS "inputDbType",
        OUTPUT_DB_TYPE AS "outputDbType",
        INPUT_TABLE_ID AS "inputTableId",
        INPUT_TABLE_CODE AS "inputTableCode",
        INPUT_TABLE_KIND AS "inputTableKind",
        OUTPUT_TABLE_ID AS "outputTableId",
        OUTPUT_TABLE_CODE AS "outputTableCode",
        EXIST_TABLE_SQL AS "existTableSql",
        CREATE_TABLE_SQL AS "createTableSql",
        INPUT_TABLE_ORDER_FIELD AS "inputTableOrderField",
        INPUT_TABLE_WHERE_CLAUSE AS "inputTableWhereClause",
        SCAN_NEXT_ROW_KEY AS "scanNextRowKey",
        NUM AS "num",
        SCAN_OFFSET AS "scanOffset",
        SCAN_MAX_SIZE AS "scanMaxSize",
        SCAN_NEXT_OFFSET AS "scanNextOffset"
        from CRE_RULE_TASK
        where TASK_ID in
        <foreach collection="list" item="taskId" index="index"
                 open="(" close=")" separator=",">
            #{taskId}
        </foreach>
    </select>

    <select id="getAllTaskByStatus" resultType="com.bonc.frame.entity.task.RuleTask" parameterType="java.lang.String">
        SELECT
          	TASK_ID AS "taskId",
            TASK_NAME AS "taskName",
            PACKAGE_ID AS "packageId",
            PACKAGE_NAME AS "packageName",
            RULE_ID AS "ruleId",
            RULE_NAME AS "ruleName",
        RULE_VERSION AS "ruleVersion",
            TASK_STATUS AS "taskStatus",
            IS_ALLOWED_REPEAT AS "isAllowedRepeat",
            CRON AS "cron",
            EXECUTE_COUNT AS "executeCount",
            INPUT_SQL AS "inputSql",
            OUTPUT_SQL AS "outputSql",
            INPUT_DB_ID AS "inputDbId",
            OUTPUT_DB_ID AS "outputDbId",
        INPUT_DB_TYPE AS "inputDbType",
        OUTPUT_DB_TYPE AS "outputDbType",
            INPUT_TABLE_ID AS "inputTableId",
            INPUT_TABLE_CODE AS "inputTableCode",
            INPUT_TABLE_KIND AS "inputTableKind",
            OUTPUT_TABLE_ID AS "outputTableId",
            OUTPUT_TABLE_CODE AS "outputTableCode",
            EXIST_TABLE_SQL AS "existTableSql",
            CREATE_TABLE_SQL AS "createTableSql",
        INPUT_TABLE_ORDER_FIELD AS "inputTableOrderField",
        INPUT_TABLE_WHERE_CLAUSE AS "inputTableWhereClause",
        SCAN_NEXT_ROW_KEY AS "scanNextRowKey",
            NUM AS "num",
            SCAN_OFFSET AS "scanOffset",
            SCAN_MAX_SIZE AS "scanMaxSize",
            SCAN_NEXT_OFFSET AS "scanNextOffset"
        FROM CRE_RULE_TASK
        WHERE TASK_STATUS = #{taskStatus,jdbcType=VARCHAR}
    </select>

    <select id="getAllNeedRunTask" resultType="com.bonc.frame.entity.task.RuleTask">
        SELECT
            TASK_ID AS "taskId",
            TASK_NAME AS "taskName",
            PACKAGE_ID AS "packageId",
            PACKAGE_NAME AS "packageName",
            RULE_ID AS "ruleId",
            RULE_NAME AS "ruleName",
        RULE_VERSION AS "ruleVersion",
            TASK_STATUS AS "taskStatus",
            IS_ALLOWED_REPEAT AS "isAllowedRepeat",
            CRON AS "cron",
            EXECUTE_COUNT AS "executeCount",
            INPUT_SQL AS "inputSql",
            OUTPUT_SQL AS "outputSql",
            INPUT_DB_ID AS "inputDbId",
            OUTPUT_DB_ID AS "outputDbId",
        INPUT_DB_TYPE AS "inputDbType",
        OUTPUT_DB_TYPE AS "outputDbType",
            INPUT_TABLE_ID AS "inputTableId",
            INPUT_TABLE_CODE AS "inputTableCode",
            INPUT_TABLE_KIND AS "inputTableKind",
            OUTPUT_TABLE_ID AS "outputTableId",
            OUTPUT_TABLE_CODE AS "outputTableCode",
            EXIST_TABLE_SQL AS "existTableSql",
            CREATE_TABLE_SQL AS "createTableSql",
        INPUT_TABLE_ORDER_FIELD AS "inputTableOrderField",
        INPUT_TABLE_WHERE_CLAUSE AS "inputTableWhereClause",
        SCAN_NEXT_ROW_KEY AS "scanNextRowKey",
            NUM AS "num",
            SCAN_OFFSET AS "scanOffset",
            SCAN_MAX_SIZE AS "scanMaxSize",
            SCAN_NEXT_OFFSET AS "scanNextOffset"
        FROM CRE_RULE_TASK WHERE TASK_STATUS = '1' OR TASK_STATUS = '2'
    </select>

    <select id="getAllNeedStopTask" resultType="com.bonc.frame.entity.task.RuleTask">
        SELECT
        TASK_ID AS "taskId",
        TASK_NAME AS "taskName",
        PACKAGE_ID AS "packageId",
        PACKAGE_NAME AS "packageName",
        RULE_ID AS "ruleId",
        RULE_NAME AS "ruleName",
        RULE_VERSION AS "ruleVersion",
        TASK_STATUS AS "taskStatus",
        IS_ALLOWED_REPEAT AS "isAllowedRepeat",
        CRON AS "cron",
        EXECUTE_COUNT AS "executeCount",
        INPUT_SQL AS "inputSql",
        OUTPUT_SQL AS "outputSql",
        INPUT_DB_ID AS "inputDbId",
        OUTPUT_DB_ID AS "outputDbId",
        INPUT_TABLE_ID AS "inputTableId",
        INPUT_TABLE_CODE AS "inputTableCode",
        INPUT_TABLE_KIND AS "inputTableKind",
        OUTPUT_TABLE_ID AS "outputTableId",
        OUTPUT_TABLE_CODE AS "outputTableCode",
        EXIST_TABLE_SQL AS "existTableSql",
        CREATE_TABLE_SQL AS "createTableSql",
        NUM AS "num",
        SCAN_OFFSET AS "scanOffset",
        SCAN_MAX_SIZE AS "scanMaxSize",
        SCAN_NEXT_OFFSET AS "scanNextOffset"
        FROM CRE_RULE_TASK WHERE TASK_STATUS = '4' OR TASK_STATUS = '6' OR TASK_STATUS = '-1'
    </select>

    <!-- 分页查询函数列表 -->
    <select id="getRuleTaskList" resultMap="BaseResultMap" parameterType="map">
        SELECT
        TASK_ID, TASK_NAME, PACKAGE_ID, PACKAGE_NAME, RULE_ID, RULE_NAME, RULE_VERSION, TASK_STATUS,IS_ALLOWED_REPEAT,
        CRON, EXECUTE_COUNT, DESCRIBE, RESULT_DESCRIBE, INPUT_TABLE_KIND,
        INPUT_TABLE_ID, INPUT_TABLE_CODE, OUTPUT_TABLE_ID, OUTPUT_TABLE_CODE,
        CREATE_DATE, UPDATE_DATE, CREATE_PERSON, UPDATE_PERSON, NUM, SCAN_OFFSET,
        SCAN_MAX_SIZE, SCAN_NEXT_OFFSET, SCAN_NEXT_ROW_KEY,
        INPUT_TABLE_ORDER_FIELD, INPUT_TABLE_WHERE_CLAUSE, INPUT_DB_TYPE, OUTPUT_DB_TYPE
        FROM CRE_RULE_TASK
        where TASK_STATUS != '6'
        <if test="taskId != null and '' != taskId">
            and TASK_ID = #{taskId}
        </if>
        <if test="taskName != null and '' != taskName">
            <bind name="taskNamePattern" value="'%' + _parameter.taskName + '%'"/>
            and TASK_NAME like #{taskNamePattern}
        </if>
        <if test="packageName != null and '' != packageName">
            <bind name="packageNamePattern" value="'%' + _parameter.packageName + '%'"/>
            and PACKAGE_NAME like #{packageNamePattern}
        </if>
        <if test="ruleName != null and '' != ruleName">
            <bind name="ruleNamePattern" value="'%' + _parameter.ruleName + '%'"/>
            and RULE_NAME like #{ruleNamePattern}
        </if>
        <if test="ruleVersion != null and '' != ruleVersion">
            and RULE_VERSION = #{ruleVersion}
        </if>
        <if test="taskStatus != null and '' != taskStatus">
            and TASK_STATUS = #{taskStatus}
        </if>
        <if test="isAllowedRepeat != null and '' != isAllowedRepeat">
            and IS_ALLOWED_REPEAT = #{isAllowedRepeat}
        </if>
        order by
        <choose>
            <when test="sort != null and '' != sort">
                #{sort}
                <if test="order != null and '' != order">
                    #{order}
                </if>
            </when>
            <otherwise>
                CREATE_DATE desc
            </otherwise>
        </choose>
    </select>

    <!-- 分页查询函数列表 -->
    <select id="getRuleTaskListNoAuth" resultMap="BaseResultMap" parameterType="map">
        SELECT
        TASK_ID, TASK_NAME, PACKAGE_ID, PACKAGE_NAME, RULE_ID, RULE_NAME, RULE_VERSION, TASK_STATUS,IS_ALLOWED_REPEAT,
        CRON, EXECUTE_COUNT, DESCRIBE, RESULT_DESCRIBE, INPUT_TABLE_KIND,
        INPUT_TABLE_ID, INPUT_TABLE_CODE, OUTPUT_TABLE_ID, OUTPUT_TABLE_CODE,
        CREATE_DATE, UPDATE_DATE, CREATE_PERSON, UPDATE_PERSON, NUM, SCAN_OFFSET,
        SCAN_MAX_SIZE, SCAN_NEXT_OFFSET, SCAN_NEXT_ROW_KEY,
        INPUT_TABLE_ORDER_FIELD, INPUT_TABLE_WHERE_CLAUSE, INPUT_DB_TYPE, OUTPUT_DB_TYPE
        FROM CRE_RULE_TASK
        where TASK_STATUS != '6'
        <if test="taskId != null and '' != taskId">
            and TASK_ID = #{taskId}
        </if>
        <if test="taskName != null and '' != taskName">
            <bind name="taskNamePattern" value="'%' + _parameter.taskName + '%'"/>
            and TASK_NAME like #{taskNamePattern}
        </if>
        <if test="packageName != null and '' != packageName">
            <bind name="packageNamePattern" value="'%' + _parameter.packageName + '%'"/>
            and PACKAGE_NAME like #{packageNamePattern}
        </if>
        <if test="ruleName != null and '' != ruleName">
            <bind name="ruleNamePattern" value="'%' + _parameter.ruleName + '%'"/>
            and RULE_NAME like #{ruleNamePattern}
        </if>
        <if test="ruleVersion != null and '' != ruleVersion">
            and RULE_VERSION = #{ruleVersion}
        </if>
        <if test="taskStatus != null and '' != taskStatus">
            and TASK_STATUS = #{taskStatus}
        </if>
        <if test="isAllowedRepeat != null and '' != isAllowedRepeat">
            and IS_ALLOWED_REPEAT = #{isAllowedRepeat}
        </if>
        order by
        <choose>
            <when test="sort != null and '' != sort">
                #{sort}
                <if test="order != null and '' != order">
                    #{order}
                </if>
            </when>
            <otherwise>
                CREATE_DATE desc
            </otherwise>
        </choose>
    </select>

    <!-- 分页查询函数列表 -->
    <select id="pagedRuleTaskResource" resultType="com.bonc.frame.entity.auth.resource.RuleTaskResource" parameterType="map">
        SELECT
        TASK_ID AS "taskId",
        TASK_NAME AS "taskName",
        PACKAGE_ID AS "packageId",
        PACKAGE_NAME AS "packageName",
        RULE_ID AS "ruleId",
        RULE_NAME AS "ruleName",
        RULE_VERSION AS "ruleVersion",
        IS_ALLOWED_REPEAT AS "isAllowedRepeat",
        DESCRIBE AS "describe"
        FROM
        CRE_RULE_TASK
        where TASK_STATUS != '6'
        <if test="taskName != null and '' != taskName">
            <bind name="taskNamePattern" value="'%' + _parameter.taskName + '%'"/>
            and TASK_NAME like #{taskNamePattern}
        </if>
        <if test="packageName != null and '' != packageName">
            <bind name="packageNamePattern" value="'%' + _parameter.packageName + '%'"/>
            and PACKAGE_NAME like #{packageNamePattern}
        </if>
        <if test="ruleName != null and '' != ruleName">
            <bind name="ruleNamePattern" value="'%' + _parameter.ruleName + '%'"/>
            and RULE_NAME like #{ruleNamePattern}
        </if>
        <if test="ruleVersion != null and '' != ruleVersion">
            and RULE_VERSION = #{ruleVersion}
        </if>
        order by CREATE_DATE desc
    </select>

    <insert id="insertSelective" parameterType="com.bonc.frame.entity.task.RuleTask">
        insert into CRE_RULE_TASK
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">
                TASK_ID,
            </if>
            <if test="taskName != null">
                TASK_NAME,
            </if>
            <if test="packageId != null">
                PACKAGE_ID,
            </if>
            <if test="packageName != null">
                PACKAGE_NAME,
            </if>
            <if test="ruleId != null">
                RULE_ID,
            </if>
            <if test="ruleName != null">
                RULE_NAME,
            </if>
            <if test="ruleVersion != null">
                RULE_VERSION,
            </if>
            <if test="taskStatus != null">
                TASK_STATUS,
            </if>
            <if test="isAllowedRepeat != null">
                IS_ALLOWED_REPEAT,
            </if>
            <if test="cron != null">
                CRON,
            </if>
            <if test="executeCount != null">
                EXECUTE_COUNT,
            </if>
            <if test="inputSql != null">
                INPUT_SQL,
            </if>
            <if test="outputSql != null">
                OUTPUT_SQL,
            </if>
            <if test="describe != null">
                DESCRIBE,
            </if>
            <if test="resultDescribe != null">
                RESULT_DESCRIBE,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
            <if test="createPerson != null">
                CREATE_PERSON,
            </if>
            <if test="updatePerson != null">
                UPDATE_PERSON,
            </if>
            <if test="inputDbId != null">
                INPUT_DB_ID,
            </if>
            <if test="outputDbId != null">
                OUTPUT_DB_ID,
            </if>
            <if test="inputDbType != null">
                INPUT_DB_TYPE,
            </if>
            <if test="outputDbType != null">
                OUTPUT_DB_TYPE,
            </if>
            <if test="inputTableId != null">
                INPUT_TABLE_ID,
            </if>
            <if test="inputTableCode != null">
                INPUT_TABLE_CODE,
            </if>
            <if test="inputTableKind != null">
                INPUT_TABLE_KIND,
            </if>
            <if test="outputTableId != null">
                OUTPUT_TABLE_ID,
            </if>
            <if test="outputTableCode != null">
                OUTPUT_TABLE_CODE,
            </if>
            <if test="existTableSql != null">
                EXIST_TABLE_SQL,
            </if>
            <if test="createTableSql != null">
                CREATE_TABLE_SQL,
            </if>
            <if test="inputTableOrderField != null">
                INPUT_TABLE_ORDER_FIELD,
            </if>
            <if test="inputTableWhereClause != null">
                INPUT_TABLE_WHERE_CLAUSE,
            </if>
            <if test="scanNextRowKey != null">
                SCAN_NEXT_ROW_KEY,
            </if>
            <if test="scanOffset != null">
                SCAN_OFFSET,
            </if>
            <if test="scanMaxSize != null">
                SCAN_MAX_SIZE,
            </if>
            <if test="scanNextOffset != null">
                SCAN_NEXT_OFFSET,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null">
                #{taskId,jdbcType=VARCHAR},
            </if>
            <if test="taskName != null">
                #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="packageId != null">
                #{packageId,jdbcType=VARCHAR},
            </if>
            <if test="packageName != null">
                #{packageName,jdbcType=VARCHAR},
            </if>
            <if test="ruleId != null">
                #{ruleId,jdbcType=VARCHAR},
            </if>
            <if test="ruleName != null">
                #{ruleName,jdbcType=VARCHAR},
            </if>
            <if test="ruleVersion != null">
                #{ruleVersion,jdbcType=VARCHAR},
            </if>
            <if test="taskStatus != null">
                #{taskStatus,jdbcType=VARCHAR},
            </if>
            <if test="isAllowedRepeat != null">
                #{isAllowedRepeat,jdbcType=VARCHAR},
            </if>
            <if test="cron != null">
                #{cron,jdbcType=VARCHAR},
            </if>
            <if test="executeCount != null">
                #{executeCount,jdbcType=BIGINT},
            </if>
            <if test="inputSql != null">
                #{inputSql,jdbcType=VARCHAR},
            </if>
            <if test="outputSql != null">
                #{outputSql,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                #{describe,jdbcType=VARCHAR},
            </if>
            <if test="resultDescribe != null">
                #{resultDescribe,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createPerson != null">
                #{createPerson,jdbcType=VARCHAR},
            </if>
            <if test="updatePerson != null">
                #{updatePerson,jdbcType=VARCHAR},
            </if>
            <if test="inputDbId != null">
                #{inputDbId,jdbcType=VARCHAR},
            </if>
            <if test="outputDbId != null">
                #{outputDbId,jdbcType=VARCHAR},
            </if>
            <if test="inputDbType != null">
                #{inputDbType,jdbcType=VARCHAR},
            </if>
            <if test="outputDbType != null">
                #{outputDbType,jdbcType=VARCHAR},
            </if>
            <if test="inputTableId != null">
                #{inputTableId,jdbcType=VARCHAR},
            </if>
            <if test="inputTableCode != null">
                #{inputTableCode,jdbcType=VARCHAR},
            </if>
            <if test="inputTableKind != null">
                #{inputTableKind,jdbcType=VARCHAR},
            </if>
            <if test="outputTableId != null">
                #{outputTableId,jdbcType=VARCHAR},
            </if>
            <if test="outputTableCode != null">
                #{outputTableCode,jdbcType=VARCHAR},
            </if>
            <if test="existTableSql != null">
                #{existTableSql,jdbcType=VARCHAR},
            </if>
            <if test="createTableSql != null">
                #{createTableSql,jdbcType=VARCHAR},
            </if>
            <if test="inputTableOrderField != null">
                #{inputTableOrderField,jdbcType=VARCHAR},
            </if>
            <if test="inputTableWhereClause != null">
                #{inputTableWhereClause,jdbcType=VARCHAR},
            </if>
            <if test="scanNextRowKey != null">
                #{scanNextRowKey,jdbcType=VARCHAR},
            </if>
            <if test="scanOffset != null">
                #{scanOffset,jdbcType=BIGINT},
            </if>
            <if test="scanMaxSize != null">
                #{scanMaxSize,jdbcType=BIGINT},
            </if>
            <if test="scanNextOffset != null">
                #{scanNextOffset,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateScanNextOffsetByPrimaryKey" parameterType="com.bonc.frame.entity.task.RuleTask">
        update CRE_RULE_TASK
        <set>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="scanNextOffset != null">
                SCAN_NEXT_OFFSET = #{scanNextOffset,jdbcType=BIGINT},
            </if>
        </set>
        where TASK_ID = #{taskId,jdbcType=VARCHAR}
    </update>

    <update id="updateScanNextRowKeyByPrimaryKey" parameterType="com.bonc.frame.entity.task.RuleTask">
        update CRE_RULE_TASK
        <set>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="scanNextRowKey != null">
                SCAN_NEXT_ROW_KEY = #{scanNextRowKey,jdbcType=VARCHAR},
            </if>
        </set>
        where TASK_ID = #{taskId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.bonc.frame.entity.task.RuleTask">
        update CRE_RULE_TASK
        <set>
            <if test="taskName != null">
                TASK_NAME = #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="packageId != null">
                PACKAGE_ID = #{packageId,jdbcType=VARCHAR},
            </if>
            <if test="packageName != null">
                PACKAGE_NAME = #{packageName,jdbcType=VARCHAR},
            </if>
            <if test="ruleId != null">
                RULE_ID = #{ruleId,jdbcType=VARCHAR},
            </if>
            <if test="ruleName != null">
                RULE_NAME = #{ruleName,jdbcType=VARCHAR},
            </if>
            <if test="ruleVersion != null">
                RULE_VERSION = #{ruleVersion,jdbcType=VARCHAR},
            </if>
            <if test="taskStatus != null">
                TASK_STATUS = #{taskStatus,jdbcType=VARCHAR},
            </if>
            <if test="isAllowedRepeat != null">
                IS_ALLOWED_REPEAT = #{isAllowedRepeat,jdbcType=VARCHAR},
            </if>
            <if test="cron != null">
                CRON = #{cron,jdbcType=VARCHAR},
            </if>
            <if test="executeCount != null">
                EXECUTE_COUNT = #{executeCount,jdbcType=BIGINT},
            </if>
            <if test="inputSql != null">
                INPUT_SQL = #{inputSql,jdbcType=VARCHAR},
            </if>
            <if test="outputSql != null">
                OUTPUT_SQL = #{outputSql,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                DESCRIBE = #{describe,jdbcType=VARCHAR},
            </if>
            <if test="resultDescribe != null">
                RESULT_DESCRIBE = #{resultDescribe,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePerson != null">
                UPDATE_PERSON = #{updatePerson,jdbcType=VARCHAR},
            </if>
            <if test="inputDbId != null">
                INPUT_DB_ID = #{inputDbId,jdbcType=VARCHAR},
            </if>
            <if test="outputDbId != null">
                OUTPUT_DB_ID = #{outputDbId,jdbcType=VARCHAR},
            </if>
            <if test="inputDbType != null">
                INPUT_DB_TYPE = #{inputDbType,jdbcType=VARCHAR},
            </if>
            <if test="outputDbType != null">
                OUTPUT_DB_TYPE = #{outputDbType,jdbcType=VARCHAR},
            </if>
            <if test="inputTableId != null">
                INPUT_TABLE_ID = #{inputTableId,jdbcType=VARCHAR},
            </if>
            <if test="inputTableCode != null">
                INPUT_TABLE_CODE = #{inputTableCode,jdbcType=VARCHAR},
            </if>
            <if test="inputTableKind != null">
                INPUT_TABLE_KIND = #{inputTableKind,jdbcType=VARCHAR},
            </if>
            <if test="outputTableId != null">
                OUTPUT_TABLE_ID = #{outputTableId,jdbcType=VARCHAR},
            </if>
            <if test="outputTableCode != null">
                OUTPUT_TABLE_CODE = #{outputTableCode,jdbcType=VARCHAR},
            </if>
            <if test="existTableSql != null">
                EXIST_TABLE_SQL = #{existTableSql,jdbcType=VARCHAR},
            </if>
            <if test="createTableSql != null">
                CREATE_TABLE_SQL = #{createTableSql,jdbcType=VARCHAR},
            </if>
            <if test="inputTableOrderField != null">
                INPUT_TABLE_ORDER_FIELD = #{inputTableOrderField,jdbcType=VARCHAR},
            </if>
            <if test="inputTableWhereClause != null">
                INPUT_TABLE_WHERE_CLAUSE = #{inputTableWhereClause,jdbcType=VARCHAR},
            </if>
            <if test="scanNextRowKey != null">
                SCAN_NEXT_ROW_KEY = #{scanNextRowKey,jdbcType=VARCHAR},
            </if>
            <if test="scanOffset != null">
                SCAN_OFFSET = #{scanOffset,jdbcType=BIGINT},
            </if>
            <if test="scanMaxSize != null">
                SCAN_MAX_SIZE = #{scanMaxSize,jdbcType=BIGINT},
            </if>
            <if test="scanNextOffset != null">
                SCAN_NEXT_OFFSET = #{scanNextOffset,jdbcType=BIGINT},
            </if>
        </set>
        where TASK_ID = #{taskId,jdbcType=VARCHAR}
    </update>

    <!--<update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE CRE_RULE_TASK
            <set>
                <if test="taskName != null">
                    TASK_NAME = #{taskName,jdbcType=VARCHAR},
                </if>
                <if test="packageId != null">
                    PACKAGE_ID = #{packageId,jdbcType=VARCHAR},
                </if>
                <if test="packageName != null">
                    PACKAGE_NAME = #{packageName,jdbcType=VARCHAR},
                </if>
                <if test="ruleId != null">
                    RULE_ID = #{ruleId,jdbcType=VARCHAR},
                </if>
                <if test="ruleName != null">
                    RULE_NAME = #{ruleName,jdbcType=VARCHAR},
                </if>
                <if test="taskStatus != null">
                    TASK_STATUS = #{taskStatus,jdbcType=VARCHAR},
                </if>
                <if test="cron != null">
                    CRON = #{cron,jdbcType=VARCHAR},
                </if>
                <if test="executeCount != null">
                    EXECUTE_COUNT = #{executeCount,jdbcType=BIGINT},
                </if>
                <if test="inputSql != null">
                    INPUT_SQL = #{inputSql,jdbcType=VARCHAR},
                </if>
                <if test="outputSql != null">
                    OUTPUT_SQL = #{outputSql,jdbcType=VARCHAR},
                </if>
                <if test="describe != null">
                    DESCRIBE = #{describe,jdbcType=VARCHAR},
                </if>
                <if test="resultDescribe != null">
                    RESULT_DESCRIBE = #{resultDescribe,jdbcType=VARCHAR},
                </if>
                <if test="updateDate != null">
                    UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
                </if>
                <if test="updatePerson != null">
                    UPDATE_PERSON = #{updatePerson,jdbcType=VARCHAR},
                </if>
                <if test="inputDbId != null">
                    INPUT_DB_ID = #{inputDbId,jdbcType=VARCHAR},
                </if>
                <if test="outputDbId != null">
                    OUTPUT_DB_ID = #{outputDbId,jdbcType=VARCHAR},
                </if>
                <if test="inputTableId != null">
                    INPUT_TABLE_ID = #{inputTableId,jdbcType=VARCHAR},
                </if>
                <if test="inputTableCode != null">
                    INPUT_TABLE_CODE = #{inputTableCode,jdbcType=VARCHAR},
                </if>
                <if test="inputTableKind != null">
                    INPUT_TABLE_KIND = #{inputTableKind,jdbcType=VARCHAR},
                </if>
                <if test="outputTableId != null">
                    OUTPUT_TABLE_ID = #{outputTableId,jdbcType=VARCHAR},
                </if>
                <if test="outputTableCode != null">
                    OUTPUT_TABLE_CODE = #{outputTableCode,jdbcType=VARCHAR},
                </if>
                <if test="existTableSql != null">
                    EXIST_TABLE_SQL = #{existTableSql,jdbcType=VARCHAR},
                </if>
                <if test="createTableSql != null">
                    CREATE_TABLE_SQL = #{createTableSql,jdbcType=VARCHAR},
                </if>
                <if test="scanOffset != null">
                    SCAN_OFFSET = #{scanOffset,jdbcType=BIGINT},
                </if>
                <if test="scanMaxSize != null">
                    SCAN_MAX_SIZE = #{scanMaxSize,jdbcType=BIGINT},
                </if>
                <if test="scanNextOffset != null">
                    SCAN_NEXT_OFFSET = #{scanNextOffset,jdbcType=BIGINT},
                </if>
            </set>
            where TASK_ID = #{taskId,jdbcType=VARCHAR}
        </foreach>
    </update>-->

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from CRE_RULE_TASK
        where TASK_ID = #{taskId,jdbcType=VARCHAR}
    </delete>

    <!-- 根据 taskId 批量删除 -->
    <delete id="deleteByTaskIds" parameterType="string">
        delete from CRE_RULE_TASK
        where TASK_ID in
        <foreach collection="list" item="taskId" index="index"
                 open="(" close=")" separator=",">
            #{taskId}
        </foreach>
    </delete>
</mapper>