<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bonc.frame.engine.mapper.ApiMapper">

    <resultMap id="BaseResultMap" type="com.bonc.frame.entity.api.ApiConf">
        <id column="API_ID" property="apiId" jdbcType="VARCHAR"/>
        <result column="FOLDER_ID" property="folderId" jdbcType="VARCHAR"/>
        <result column="API_TYPE" property="apiType" jdbcType="VARCHAR"/>
        <result column="API_NAME" property="apiName" jdbcType="VARCHAR"/>
        <result column="API_DESC" property="apiDesc" jdbcType="VARCHAR"/>
        <result column="IS_LOG" property="isLog" jdbcType="VARCHAR"/>
        <result column="CREATE_PERSION" property="createPersion" jdbcType="VARCHAR"/>
        <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_PERSION" property="updatePersion" jdbcType="VARCHAR"/>
        <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.bonc.frame.entity.api.ApiConf" extends="BaseResultMap">
        <result column="API_CONTENT" property="apiContent" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    API_ID,FOLDER_ID, API_TYPE, API_NAME, API_DESC, IS_LOG, CREATE_PERSION, CREATE_DATE, UPDATE_PERSION, 
    UPDATE_DATE
  </sql>
    <sql id="Blob_Column_List">
    API_CONTENT
  </sql>

    <select id="selectApiProperties" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from CRE_API_CONF
        WHERE FOLDER_ID = #{folderId,jdbcType=VARCHAR}
    </select>

    <select id="selecPubApiIds" resultType="java.lang.String" parameterType="java.lang.String">
    SELECT
    API_ID FROM CRE_API_CONF
    WHERE IS_PUBLIC = '1'
    AND API_ID IN (
    SELECT AR.API_ID FROM CRE_API_RULE AR
    INNER JOIN (
    SELECT RULE_ID FROM CRE_RULE_DETAIL
    WHERE FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        AND IS_DEL = '0' AND IS_HEADER = '0'
        UNION
        SELECT
        RULE_ID
        FROM
        CRE_RULE_DETAIL_DRAFT
        WHERE
        FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        AND IS_DEL = '0' AND IS_HEADER = '0'
    ) R ON AR.RULE_ID = R.RULE_ID
    )
  </select>

    <select id="selecPubApiProperties" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM
        CRE_API_CONF
        WHERE
        IS_PUBLIC = '1'
        AND API_ID IN (
        SELECT
        d.API_ID AS API_ID
        FROM
        CRE_API_RULE d
        INNER JOIN CRE_RULE_DETAIL e ON d.RULE_ID = e.RULE_ID
        WHERE
        e.FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        AND d.API_ID IS NOT NULL
        UNION
        SELECT
        D .API_ID AS API_ID
        FROM
        CRE_API_RULE D
        INNER JOIN CRE_RULE_DETAIL_DRAFT E ON D .RULE_ID = E .RULE_ID
        WHERE
        E .FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        AND D .API_ID IS NOT NULL
        UNION
        SELECT
        a.API_ID AS API_ID
        FROM
        CRE_KPI_DEFINITION a
        INNER JOIN CRE_KPI_RULE b ON a.KPI_ID = b.KPI_ID
        INNER JOIN CRE_RULE_DETAIL c ON b.RULE_ID = c.RULE_ID
        WHERE
        c.FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        AND A .API_ID IS NOT NULL
        UNION
        SELECT
        A .API_ID AS API_ID
        FROM
        CRE_KPI_DEFINITION A
        INNER JOIN CRE_KPI_RULE b ON A .KPI_ID = b.KPI_ID
        INNER JOIN CRE_RULE_DETAIL_DRAFT c ON b.RULE_ID = c.RULE_ID
        WHERE
        c.FOLDER_ID = #{folderId,jdbcType=VARCHAR}
        AND A .API_ID IS NOT NULL
        )
    </select>

    <!-- 插入规则执行日志 -->
    <insert id="insertApiLog" parameterType="map">
        insert into CRE_API_LOG

        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logId != null">
                LOG_ID,
            </if>
            <if test="apiId != null">
                API_ID,
            </if>
            <if test="logContent != null">
                LOG_CONTENT,
            </if>
            <if test="logOccurtime != null">
                LOG_OCCURTIME,
            </if>
            <if test="callResult != null">
                CALL_RESULT,
            </if>
            <if test="logParam != null">
                LOG_PARAM,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logId != null">
                #{logId,jdbcType=VARCHAR},
            </if>
            <if test="apiId != null">
                #{apiId,jdbcType=VARCHAR},
            </if>
            <if test="logContent != null">
                #{logContent,jdbcType=VARCHAR},
            </if>
            <if test="logOccurtime != null">
                #{logOccurtime,jdbcType=VARCHAR},
            </if>
            <if test="callResult != null">
                #{callResult,jdbcType=TIMESTAMP},
            </if>
            <if test="logParam != null">
                #{logParam,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <!-- 批量插入规则执行日志 --><!-- 批量插入的问题修改 -->
    <insert id="insertBatchApiLog" parameterType="list">
        BEGIN
        <foreach collection="list" item="apiLog" separator="">
            insert into CRE_API_LOG
            (LOG_ID,API_ID,LOG_CONTENT,LOG_OCCURTIME,
            CALL_RESULT,LOG_PARAM)
            VALUES
            (#{apiLog.logId,jdbcType=VARCHAR},#{apiLog.apiId,jdbcType=VARCHAR},
            #{apiLog.logContent,jdbcType=VARCHAR},#{apiLog.logOccurtime,jdbcType=VARCHAR},
            #{apiLog.callResult,jdbcType=TIMESTAMP},#{apiLog.logParam,jdbcType=TIMESTAMP});
        </foreach>
        COMMIT;
        END;
    </insert>
</mapper>