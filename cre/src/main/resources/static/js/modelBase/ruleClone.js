var ruleClone = {	// 数据存储	data: {},	// 事件存储	event: {},	// 初始化	init: function ( param ) {		// 初始化data数据		if ( param !== void 0 ) ruleClone.data = Object.assign( {}, param );		var folderId = ruleClone.data.folderId;		if ( folderId === void 0 ) {			ruleClone.$query( '.folderId' ).show();			ruleClone.$query( 'hr' ).show();			// 获取模型库;			ruleClone.$ajax( '/ruleFolder/modelBaseId', 'GET', null, function ( model ) {				// 将模型库和场景列表合并				var html = '<option value="">请选择</option>';				html += '<option value="' + model.data + '">模型库</option>';				ruleClone.$ajax( '/ruleFolder/ruleFolderList', 'GET', null, function ( data ) {					for ( var i = 0; i < data.length; i++ ) {						html += '<option value="' + data[ i ].key + '">' + data[ i ].text + '</option>';					}					ruleClone.$query( '#folderId' ).html( html );				} );			} );			// 获取模型组			ruleClone.$ajax( '/modelBase/group/list', 'GET', null, function ( data ) {				var list = data.data;				var html = '<option value="">请选择</option>';				for ( var i = 0; i < list.length; i++ ) {					html += '<option value="' + list[ i ].modelGroupId + '">' + list[ i ].modelGroupName + '</option>';				}				ruleClone.$query( '#modelGroupId' ).html( html );			} );		}	},	// 克隆	clone: function () {		if ( ruleClone.check() ) {			ruleClone.data.oldRuleId = Object.assign( {}, ruleClone.data.oldRuleId, {				modelGroupId: ruleClone.$query( '#modelGroupId' ).val(),				versionDesc: ruleClone.$query( '#versionDesc' ).val(),				moduleName: ruleClone.$query( '#moduleName' ).val(),				ruleDesc: ruleClone.$query( '#ruleDesc' ).val(),				folderId: ruleClone.data.folderId === void 0 ? ruleClone.$query( '#folderId' ).val() : ruleClone.data.folderId,				isPublic: ruleClone.data.folderId === void 0 && ruleClone.data.folderIdIndex === 1 ? 1 : 0			} );			ruleClone.$ajax( '/rule/public/folder/clone', 'POST', ruleClone.data.oldRuleId, function ( data ) {				if ( data.status === 0 ) {					successMessager.show( '克隆成功' );					ruleClone.handleModelToggle( false );					ruleClone.event.onSuccess && ruleClone.event.onSuccess();				} else {					failedMessager.show( '克隆失败!' );					ruleClone.event.onError && ruleClone.event.onError( data.msg );				}			} );		}	},	check: function () {		if ( ruleClone.data.folderId === void 0 ) {			if ( ruleClone.$query( '#folderId' ).val() === '' ) {				failedMessager.show( '请选择场景!' );				return false;			} else {				var index = ruleClone.$query( '#folderId' )[ 0 ].options.selectedIndex;				if ( index === 1 && ruleClone.$query( '#modelGroupId' ).val() === '' ) {					failedMessager.show( '请选择模型组!' );					return false;				}			}		}		if ( ruleClone.$query( '#ruleName' ).val() === '' ) {			failedMessager.show( '请填写新模型名称!' );			return false;		}		return true;	},	// 弹出层显示关闭	// from: 0=>直接点击克隆 1=》从弹窗中点击克隆 0615	handleModelToggle: function ( visible, from) {		if ( visible ) {			ruleClone.$query().modal( { show: 'center', backdrop: "static" } );		} else {			ruleClone.$query().modal( 'hide' );			if(from) {				ruleClone.event.onClose && ruleClone.event.onClose();			}		}	},	handleChange: function ( name, index ) {		if ( name === 'folderId' ) {			ruleClone.data.folderIdIndex = index;			if ( index === 1 ) {				ruleClone.$query( '.modelGroupId' ).show();			} else {				ruleClone.$query( '#modelGroupId' ).val( '' );				ruleClone.$query( '.modelGroupId' ).hide();			}		}	},	$ajax: function ( url, method, body, callback, dataType ) {		if ( dataType === void 0 ) dataType = 'json';		var option = {			url: webpath + url,			type: method,			dataType: dataType,			success: function ( data ) {				callback( data );			},			error: function ( XMLHttpRequest, textStatus, errorThrown ) {				console.log( errorThrown );				if ( textStatus === 'timeout' ) {					console.log( '请求超时' );				}			}		};		if ( body ) option.data = body;		$.ajax( option );	},	$query: function ( name ) {		return $( '#ruleClone ' + ( name !== void 0 ? name : '' ) );	}};