<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bonc.frame.mapper.oracle.user.UserMapper">
    <resultMap id="UserMap" type="com.bonc.frame.entity.user.UserAccountEn">
        <id column="USER_ID" property="userId" jdbcType="VARCHAR"/>
        <result column="JOB_NUMBER" property="jobNumber" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="userPassword" jdbcType="VARCHAR"/>
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR"/>
        <result column="HEAD_THUMB" property="headThumb" jdbcType="VARCHAR"/>
        <result column="USER_SEX" property="userSex" jdbcType="VARCHAR"/>
        <result column="LOGIN_DATE" property="loginDate" jdbcType="VARCHAR"/>
        <!--<result column="USER_ROLE" property="userRole" jdbcType="VARCHAR" />-->
        <result column="PHONE_NUMBER" property="phoneNumber" jdbcType="VARCHAR"/>
        <result column="EMAIL" property="email" jdbcType="VARCHAR"/>
        <!--<result column="ORGANIZATION" property="org" jdbcType="VARCHAR" />-->
        <!--<result column="DEPT_ID" property="deptId" jdbcType="VARCHAR"/>-->
        <result column="WORK_PHONE" property="workPhone" jdbcType="VARCHAR"/>
        <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="CREATE_PERSON" property="createPerson" jdbcType="VARCHAR"/>
        <result column="UPDATE_PERSON" property="updatePerson" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="UserMap2" extends="UserMap" type="com.bonc.frame.entity.user.UserAccountEn">
        <collection property="roleList" ofType="com.bonc.frame.entity.auth.Role">
            <id column="ROLE_ID" property="roleId" jdbcType="VARCHAR"/>
            <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR"/>
        </collection>
        <collection property="groupList" ofType="com.bonc.frame.entity.auth.Group">
            <id column="GROUP_ID" property="groupId" jdbcType="VARCHAR"/>
            <result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR"/>
        </collection>
        <collection property="deptList" ofType="com.bonc.frame.entity.auth.Dept">
            <id column="DEPT_ID" property="deptId" jdbcType="VARCHAR"/>
            <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR"/>
        </collection>
        <collection property="channelList" ofType="com.bonc.frame.entity.auth.Channel">
            <id column="CHANNEL_ID" property="channelId" jdbcType="VARCHAR"/>
            <result column="CHANNEL_NAME" property="channelName" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <select id="selectUser" resultMap="UserMap2" parameterType="java.util.Map">
        SELECT
        A .USER_ID,
        A .USER_NAME,
        A .JOB_NUMBER,
        A .CREATE_DATE,
        A .EMAIL,
        A .PHONE_NUMBER,
        A .USER_SEX,
        A . PASSWORD,
        b.ROLE_ID,
        b.ROLE_NAME,
        E . GROUP_ID,
        E .GROUP_NAME,
        G .DEPT_ID,
        G .DEPT_NAME,
        H .CHANNEL_ID,
        H .CHANNEL_NAME
        FROM
        CRE_USER A
        LEFT JOIN CRE_AUTH_USER_ROLE c ON A .USER_ID = c.USER_ID
        LEFT JOIN CRE_AUTH_ROLE b ON c.ROLE_ID = b.ROLE_ID
        LEFT JOIN CRE_AUTH_USER_GROUP D ON A .USER_ID = D .USER_ID
        LEFT JOIN CRE_AUTH_GROUP E ON D . GROUP_ID = E . GROUP_ID
        LEFT JOIN CRE_AUTH_USER_ORG F ON A .USER_ID = F.USER_ID
        LEFT JOIN CRE_AUTH_DEPT G ON F.ORG_ID = G .DEPT_ID
        LEFT JOIN CRE_AUTH_USER_CHAN I ON A .USER_ID = I.USER_ID
        LEFT JOIN CRE_AUTH_CHANNEL H ON I.CHAN_ID = H .CHANNEL_ID
        WHERE 1=1
        <if test="currentUser != null and '' != currentUser">
            AND A.USER_ID IN (
            select USER_ID from CRE_AUTH_USER_ROLE where ROLE_ID IN (
            select ROLE_ID from CRE_AUTH_USER_ROLE  where USER_ID = #{currentUser})
            )
        </if>
        <if test="userName != null and '' != userName">
            <bind name="userNamePattern" value="'%' + userName + '%'"/>
            AND A.USER_NAME like #{userNamePattern}
        </if>
<!--        <if test="userId != null and '' != userId">-->
<!--            <bind name="userIdPattern" value="'%' + userId + '%'"/>-->
<!--            AND A.USER_ID like #{userIdPattern}-->
<!--        </if>-->
        <if test="jobNumber != null and '' != jobNumber">
            <bind name="jobNumberPattern" value="'%' + jobNumber + '%'"/>
            AND A.JOB_NUMBER like #{jobNumberPattern}
        </if>
        <if test="channelId != null and '' != channelId">
            AND H.CHANNEL_ID = #{channelId,jdbcType=VARCHAR}
        </if>
    </select>


    <select id="listByUserIdAndUserName" resultMap="UserMap2" parameterType="java.util.List">
        SELECT
        Q.USER_ID,
        Q.USER_NAME,
        Q.JOB_NUMBER,
        Q.EMAIL,
        Q.PHONE_NUMBER,
        Q.USER_SEX,
        Q.ROLE_ID,
        Q.ROLE_NAME,
        Q.CREATE_DATE,
        Q.PASSWORD,
        W."GROUP_ID",
        W.GROUP_NAME,
        Z.DEPT_ID,
        Z.DEPT_NAME,
        R.CHANNEL_ID,
        R.CHANNEL_NAME
        FROM
        (
        SELECT
        A.USER_ID,
        A.USER_NAME,
        A.JOB_NUMBER,
        A.CREATE_DATE,
        A.EMAIL,
        A.PHONE_NUMBER,
        A.USER_SEX,
        A.PASSWORD,
        b.ROLE_ID,
        b.ROLE_NAME
        FROM
        CRE_USER A
        LEFT JOIN CRE_AUTH_USER_ROLE c ON A .USER_ID = c.USER_ID
        LEFT JOIN CRE_AUTH_ROLE b ON c.ROLE_ID = b.ROLE_ID
        ) Q,
        (
        SELECT
        A .USER_ID,
        E .GROUP_ID,
        E .GROUP_NAME
        FROM
        CRE_USER A
        LEFT JOIN CRE_AUTH_USER_GROUP D ON A .USER_ID = D .USER_ID
        LEFT JOIN CRE_AUTH_GROUP E ON D . GROUP_ID = E . GROUP_ID
        ) W,
        (
        SELECT
        A .USER_ID,
        E .DEPT_ID,
        E .DEPT_NAME
        FROM
        CRE_USER A
        LEFT JOIN CRE_AUTH_USER_ORG D ON A .USER_ID = D .USER_ID
        LEFT JOIN CRE_AUTH_DEPT E ON D .ORG_ID = E .DEPT_ID
        ) Z,

        (
        SELECT
        A .USER_ID,
        E .CHANNEL_ID,
        E .CHANNEL_NAME
        FROM
        CRE_USER A
        LEFT JOIN CRE_AUTH_USER_CHAN D ON A .USER_ID = D .USER_ID
        LEFT JOIN CRE_AUTH_CHANNEL E ON D .CHAN_ID = E .CHANNEL_ID
        ) R
        WHERE
        Q.USER_ID = W.USER_ID
        AND Q.USER_ID = Z.USER_ID

        AND Q.USER_ID IN
        <foreach collection="list" open="(" close=")" item="item" index="index" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </select>

    <sql id="Base_Column_List">
      USER_ID,JOB_NUMBER, PASSWORD,USER_NAME, HEAD_THUMB, USER_SEX, LOGIN_DATE, PHONE_NUMBER, EMAIL, WORK_PHONE, CREATE_DATE, UPDATE_DATE, CREATE_PERSON,UPDATE_PERSON
    </sql>

    <select id="queryByUserIdPwd" parameterType="map" resultMap="UserMap">
        select
        <include refid="Base_Column_List"/>
        from CRE_USER
        where USER_ID=#{userId} and PASSWORD=#{password}
    </select>

    <update id="updateLoginDate">
        update CRE_USER set LOGIN_DATE=#{loginDate} where USER_ID=#{username}
    </update>

    <update id="updatePassword">
        update CRE_USER set PASSWORD=#{newPassword} where USER_ID=#{username} and PASSWORD=#{password}
    </update>

    <select id="queryInfoByUsername" parameterType="map" resultMap="UserMap">
        select
        <include refid="Base_Column_List"/>
        from CRE_USER where USER_ID=#{username}
    </select>
    <select id="queryInfoByUserId" parameterType="string" resultType="java.util.HashMap">
        select
        t3.DEPT_NAME,t3.DEPT_ID ,t1.USER_NAME
        from CRE_USER t1 left join CRE_AUTH_USER_ORG t2 on t1.USER_ID=t2.USER_ID
        left join CRE_AUTH_DEPT t3 on t2.ORG_ID= t3.DEPT_ID
        where t1.USER_ID=#{userId}
    </select>

    <select id="findBy2UserId" parameterType="string" resultMap="UserMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        CRE_USER
        WHERE
        USER_ID = #{userId}

    </select>
    <select id="findByUsername" parameterType="java.util.Map" resultMap="UserMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        CRE_USER
        WHERE 1 = 1
        <if test="userName != null and '' != userName">
            <bind name="userNamePattern" value="'%' + userName + '%'"/>
            AND USER_NAME like #{userNamePattern}
        </if>
        <if test="userId != null and '' != userId">
            <bind name="userIdPattern" value="'%' + userId + '%'"/>
            AND USER_ID like #{userIdPattern}
        </if>
        <if test="jobNumber != null and '' != jobNumber">
            <bind name="jobNumberPattern" value="'%' + jobNumber + '%'"/>
            AND JOB_NUMBER like #{jobNumberPattern}
        </if>
    </select>

    <select id="findByUserId" parameterType="string" resultMap="UserMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        CRE_USER
        WHERE USER_ID = #{userId}
    </select>
    <!--<select id="listByUserIdAndUserName" resultMap="BaseResultMap2" parameterType="map">
        SELECT

        FROM
        CRE_USER
        where 1 = 1
        <if test="userName != null and '' != userName">
            <bind name="userNamePattern" value="'%' + _parameter.userName + '%'"/>
            and USER_NAME like #{userNamePattern}
        </if>
        <if test="userId != null and '' != userId">
            <bind name="userIdPattern" value="'%' + _parameter.userId + '%'"/>
            and USER_ID like #{userIdPattern}
        </if>
    </select>-->

    <!-- 分页查询函数列表 -->
    <select id="getUserList" resultMap="UserMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        CRE_USER
        where 1 = 1
        <if test="userName != null and '' != userName">
            <bind name="userNamePattern" value="'%' + _parameter.userName + '%'"/>
            and USER_NAME like #{userNamePattern}
        </if>
    </select>

    <insert id="createUser" parameterType="com.bonc.frame.entity.user.UserAccountEn">
        INSERT INTO
        CRE_USER
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="jobNumber != null">
                JOB_NUMBER,
            </if>
            <if test="userPassword != null ">
                PASSWORD,
            </if>
            <if test="userName != null ">
                USER_NAME,
            </if>
            <if test="headThumb != null">
                HEAD_THUMB,
            </if>
            <if test="userSex != null">
                USER_SEX,
            </if>
            <if test="loginDate != null">
                LOGIN_DATE,
            </if>
            <if test="phoneNumber != null ">
                PHONE_NUMBER,
            </if>
            <if test="email != null ">
                EMAIL,
            </if>
            <if test="workPhone != null">
                WORK_PHONE,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
            <if test="createPerson != null">
                CREATE_PERSON,
            </if>
            <if test="updatePerson != null">
                UPDATE_PERSON,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="jobNumber != null">
                #{jobNumber,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userName != null ">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="headThumb != null ">
                #{headThumb,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null ">
                #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="loginDate != null">
                #{loginDate,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null ">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="workPhone != null">
                #{workPhone,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createPerson != null">
                #{createPerson,jdbcType=VARCHAR},
            </if>
            <if test="updatePerson != null">
                #{updatePerson,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateUser" parameterType="com.bonc.frame.entity.user.UserAccountEn">
        UPDATE
        CRE_USER
        <set>
            <if test="userId != null">
                USER_ID = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="jobNumber != null">
                JOB_NUMBER = #{jobNumber,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                PASSWORD = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                USER_NAME = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="headThumb != null">
                HEAD_THUMB = #{headThumb,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                USER_SEX = #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="loginDate != null">
                LOGIN_DATE = #{loginDate,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                PHONE_NUMBER = #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                EMAIL = #{email,jdbcType=VARCHAR},
            </if>
            <if test="workPhone != null">
                WORK_PHONE = #{workPhone,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createPerson != null">
                CREATE_PERSON = #{createPerson,jdbcType=VARCHAR},
            </if>
            <if test="updatePerson != null">
                UPDATE_PERSON = #{updatePerson,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE USER_ID = #{userId}
    </update>

    <delete id="deleteUser" parameterType="string">
      DELETE
      FROM CRE_USER WHERE USER_ID = #{userId}
    </delete>
</mapper>